# .github/workflows/deploy-server.yml
name: Deploy Server to Beta

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Create Nginx configuration directory if it doesn't exist
      - name: Create Nginx configuration
        run: |
          mkdir -p nginx/sites-available
          
          # Create main nginx.conf
          cat > nginx/nginx.conf << 'EOL'
          user www-data;
          worker_processes auto;
          pid /run/nginx.pid;
          include /etc/nginx/modules-enabled/*.conf;

          events {
              worker_connections 768;
          }

          http {
              sendfile on;
              tcp_nopush on;
              tcp_nodelay on;
              keepalive_timeout 65;
              types_hash_max_size 2048;

              include /etc/nginx/mime.types;
              default_type application/octet-stream;

              ssl_protocols TLSv1.2 TLSv1.3;
              ssl_prefer_server_ciphers on;

              access_log /var/log/nginx/access.log;
              error_log /var/log/nginx/error.log;

              include /etc/nginx/conf.d/*.conf;
              include /etc/nginx/sites-enabled/*;
          }
          EOL
          
          # Create frontend site configuration
          cat > nginx/sites-available/beta.dao.cafe << 'EOL'
          server {
              listen 80;
              server_name beta.dao.cafe;

              location / {
                  proxy_pass http://localhost:3000;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
              }
          }
          EOL
          
          # Create backend API site configuration
          cat > nginx/sites-available/api-beta.dao.cafe << 'EOL'
          server {
              listen 80;
              server_name api-beta.dao.cafe;

              location / {
                  proxy_pass http://localhost:8000;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
              }
          }
          EOL

      - name: Deploy to beta server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.BETA_SERVER_HOST }}
          username: ${{ secrets.BETA_SERVER_USERNAME }}
          key: ${{ secrets.BETA_SERVER_SSH_KEY }}
          source: ".,!node_modules"
          target: "/var/www/dao.cafe/server"
          rm: false
          strip_components: 0
          exclude: ".git/**"

      - name: Configure Nginx and Docker
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.BETA_SERVER_HOST }}
          username: ${{ secrets.BETA_SERVER_USERNAME }}
          key: ${{ secrets.BETA_SERVER_SSH_KEY }}
          script: |
            cd /var/www/dao.cafe/server
            
            # Ensure the network exists
            docker network create daocafe-network || true
            
            # Set up Nginx configuration
            sudo cp -f nginx/nginx.conf /etc/nginx/nginx.conf
            sudo cp -f nginx/sites-available/beta.dao.cafe /etc/nginx/sites-available/
            sudo cp -f nginx/sites-available/api-beta.dao.cafe /etc/nginx/sites-available/
            
            # Enable sites if not already enabled
            sudo ln -sf /etc/nginx/sites-available/beta.dao.cafe /etc/nginx/sites-enabled/ || true
            sudo ln -sf /etc/nginx/sites-available/api-beta.dao.cafe /etc/nginx/sites-enabled/ || true
            
            # Remove default site if it exists
            sudo rm -f /etc/nginx/sites-enabled/default
            
            # Test Nginx configuration
            sudo nginx -t
            
            # Reload Nginx to apply changes
            sudo systemctl reload nginx
            
            # Create or update .env file from secrets
            cat > .env << EOL
            ${{ secrets.SERVER_ENV_FILE }}
            EOL
            
            # Build and start containers
            docker-compose down
            docker-compose build --no-cache
            docker-compose up -d